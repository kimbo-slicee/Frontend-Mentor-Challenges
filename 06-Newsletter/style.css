/* ================= Layer Order ================= */
@layer
reset,
fonts,
variables,
base,
components,
utilities;

/* ================= Fonts Layer ================= */
@layer fonts {
    @font-face {
        font-family: 'Roboto';
        src: url('assets/fonts/Roboto-Bold.woff2') format('woff2'),
        url('assets/fonts/Roboto-Bold.woff') format('woff');
        font-weight: 700;
        font-style: normal;
        font-display: swap;
    }

    @font-face {
        font-family: 'Roboto';
        src: url('assets/fonts/Roboto-Regular.woff2') format('woff2'),
        url('assets/fonts/Roboto-Regular.woff') format('woff');
        font-weight: 400;
        font-style: normal;
        font-display: swap;
    }
}

/* ================= Variables Layer ================= */
@layer variables {
    :root {
        /* --- Font Families --- */
        --font-main: 'Roboto', system-ui, sans-serif;

        /* --- Font Sizes --- */
        --font-size-sm: 0.875rem;   /* 14px */
        --font-size-md: 1rem;       /* 16px */
        --font-size-lg: 1.125rem;   /* 18px */
        --font-size-xl: 1.25rem;    /* 20px */
        --font-size-2xl: 1.5rem;    /* 24px */
        --font-size-3xl: 1.875rem;  /* 30px */
        --font-size-4xl: 2.25rem;   /* 36px */
        --font-size-5xl: 3rem;      /* 48px */

        /* --- Font Weights --- */
        --fw-400: 400;
        --fw-500: 500;
        --fw-700: 700;

        /* --- Primary Colors (Red Scale) --- */
        --primary-clr-100: hsl(0, 100%, 95%);
        --primary-clr-200: hsl(0, 100%, 85%);
        --primary-clr-300: hsl(0, 100%, 75%);
        --primary-clr-400: hsl(0, 100%, 70%);
        --primary-clr-500: hsl(4, 100%, 67%);
        --primary-clr-600: hsl(4, 100%, 60%);
        --primary-clr-700: hsl(4, 90%, 55%);
        --primary-clr-800: hsl(4, 85%, 45%);
        --primary-clr-900: hsl(4, 80%, 35%);

        /* --- Neutral Colors --- */
        --neutral-clr-100: hsl(0, 0%, 100%);   /* white */
        --neutral-clr-400: hsl(0, 0%, 58%);    /* grey */
        --neutral-clr-700: hsl(235, 18%, 26%); /* blue 700 */
        --neutral-clr-800: hsl(234, 29%, 20%); /* blue 800 */

        /* --- Semantic Aliases --- */
        --color-bg: var(--neutral-clr-100);
        --color-text: var(--neutral-clr-800);
        --color-border: var(--neutral-clr-400);
        --color-link: var(--primary-clr-500);

        /* --- Line Heights --- */
        --line-height-sm: 1.25;
        --line-height-md: 1.5;
        --line-height-lg: 1.75;

        /* --- Border Radius --- */
        --border-radius-sm: 0.5rem;
        --border-radius-md: 1rem;
        --border-radius-lg: 1.5rem;
        --border-radius-full: 9999px;

        /* --- Box Shadow --- */
        --box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
        0 4px 6px -2px rgba(0, 0, 0, 0.05);
    }
}

/* ================= Reset Layer ================= */
@layer reset {
    *, *::before, *::after {
        box-sizing: border-box;
    }

    * {
        margin: 0;
        padding: 0;
    }

    html, body {
        height: 100%;
    }

    body {
        font-family: var(--font-main);
        line-height: var(--line-height-md);
        -webkit-font-smoothing: antialiased;
    }

    h1, h2, h3, h4, h5, h6 {
        font-weight: inherit;
        line-height: var(--line-height-sm);
    }

    img, video, svg, canvas {
        max-width: 100%;
        height: auto;
        display: block;
    }

    input, button, select, textarea {
        font: inherit;
        color: inherit;
        background: none;
        border: none;
    }

    button {
        cursor: pointer;
    }

    input:focus,
    textarea:focus,
    button:focus {
        outline: none;
        box-shadow: none;
    }

    a {
        color: inherit;
        text-decoration: none;
    }

    ul[role="list"],
    ol[role="list"] {
        list-style: none;
    }

    [aria-hidden="true"] {
        display: none !important;
    }

    @media (prefers-reduced-motion: reduce) {
        * {
            animation-duration: 0.01ms !important;
            animation-iteration-count: 1 !important;
            transition-duration: 0.01ms !important;
            scroll-behavior: auto !important;
        }
    }
}

/* ================= Base Layer ================= */
@layer base {
    html {
        font-size: var(--font-size-md);
    }

    body {
        background-color: var(--color-bg);
        color: var(--color-text);
    }

    main, section {
        container-type: inline-size;
    }

    p {
        margin-bottom: 1rem;
    }

    label {
        display: block;
        margin-bottom: 0.25rem;
        font-weight: var(--fw-500);
    }

    input, textarea, select {
        display: block;
        width: 100%;
        margin-bottom: 1rem;
        padding: 0.5rem;
        border-radius: var(--border-radius-sm);
        border: 1px solid var(--color-border);
        background-color: var(--color-bg);
        color: var(--color-text);
    }

    button {
        padding: 0.5rem 1rem;
        border-radius: var(--border-radius-md);
        background-color: var(--primary-clr-500);
        color: var(--neutral-clr-100);
        box-shadow: var(--box-shadow);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    button:hover {
        transform: translateY(-2px);
        box-shadow: 0 12px 20px rgba(0, 0, 0, 0.15);
    }
}

/* ================= Components Layer ================= */
@layer components {
    /* Place your reusable components here (cards, navs, buttons, etc.) */
}

/* ================= Utilities Layer ================= */
@layer utilities {
    .text-center { text-align: center; }
    .mb-1 { margin-bottom: 0.25rem; }
    .mb-2 { margin-bottom: 0.5rem; }
    .sr-only {
        position: absolute !important;
        width: 1px;
        height: 1px;
        padding: 0;
        margin: -1px;
        overflow: hidden;
        clip: rect(0 0 0 0);
        white-space: nowrap;
        border: 0;
    }
}
